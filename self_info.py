# Использование и неиспользование self
'''
### Когда использовать self

1. Атрибуты экземпляра класса:
   - Используйте self для определения атрибутов, которые будут 
   сохранять состояние объекта между вызовами методов.
   - Устанавливаются такие атрибуты обычно в конструкторе init, чтобы все 
   экземпляры класса инициализировались с одними и теми же начальными свойствами.

2. Доступ к атрибутам объекта:
   - Используйте self для доступа к атрибутам объекта внутри методов 
   класса, чтобы принтануть или изменить текущее состояние объекта.

### Когда не использовать self

1. Локальные переменные внутри методов:
   - Переменные, которые используются только внутри одного метода и 
   не нужны за пределами этого метода, не должны быть атрибутами объекта. 
   Используйте их как обычные локальные переменные.

2. Константы и статические данные:
   - Для данных, которые одинаковы для всех экземпляров класса, используйте 
   атрибуты класса, а не атрибуты экземпляра. Они объявляются внутри класса, 
   но вне методов, например, CLASS_VARIABLE = 42.


class ExampleClass:
    CLASS_CONSTANT = 42  

    def __init__(self, value):
        self.variable = value  

    def update_value(self, new_value):
        temp_value = new_value * 2  
        self.variable = temp_value  

    def get_value(self):
        return self.variable  
   
    def get_const(self):
        return self.CLASS_CONSTANT    
    

ex = ExampleClass(40)
print(ex.get_const())
'''